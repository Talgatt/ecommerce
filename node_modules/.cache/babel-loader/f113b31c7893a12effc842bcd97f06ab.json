{"ast":null,"code":"import { addToCart } from \"../actions/cartActions\";\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existingItem = cart.cartItems.find(x => x.product === item.product);\n\n      if (!existingItem) {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n      return { ...state,\n        cartItems: state.cartItems.map(x => x.product === item.product ? item : x)\n      };\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== item)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/talgattulegenov/MERN/amazona/frontend/src/reducers/cartReducers.js"],"names":["addToCart","CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","item","payload","existingItem","cart","find","x","product","map","filter"],"mappings":"AAAA,SAASA,SAAT,QAA0B,wBAA1B;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,4BAAhD;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA4BC,MAA5B,KAAuC;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,aAAL;AACE,YAAMO,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,YAAMC,YAAY,GAAGC,IAAI,CAACN,SAAL,CAAeO,IAAf,CAClBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcN,IAAI,CAACM,OADP,CAArB;;AAIA,UAAI,CAACJ,YAAL,EAAmB;AACjB,eAAO,EAAE,GAAGN,KAAL;AAAYC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAAvB,SAAP;AACD;;AACD,aAAO,EACL,GAAGJ,KADE;AAELC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,GAAhB,CAAqBF,CAAD,IAC7BA,CAAC,CAACC,OAAF,KAAcN,IAAI,CAACM,OAAnB,GAA6BN,IAA7B,GAAoCK,CAD3B;AAFN,OAAP;;AAOF,SAAKX,gBAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBW,MAAhB,CAAwBH,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcN,IAA5C;AAFN,OAAP;;AAIF;AACE,aAAOJ,KAAP;AAvBJ;AAyBD,CA1BM","sourcesContent":["import { addToCart } from \"../actions/cartActions\";\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existingItem = cart.cartItems.find(\n        (x) => x.product === item.product\n      );\n\n      if (!existingItem) {\n        return { ...state, cartItems: [...state.cartItems, item] };\n      }\n      return {\n        ...state,\n        cartItems: state.cartItems.map((x) =>\n          x.product === item.product ? item : x\n        ),\n      };\n\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== item),\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}